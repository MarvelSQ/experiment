name: Deploy Preview Docs

on:
  pull_request:
    branches: ["master"]
    types: ["opened", "synchronize", "closed"]

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment:
      name: gh-pages
      url: ${{ steps.init_environment.outputs.url }}
    env:
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_NUMBER: ${{ github.event.number }}
      PR_TYPE: ${{ github.event.action }}
      PR_UPDATE_DEPS: ${{ contains(github.event.pull_request.labels.*.name, 'dependencies') }}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: using pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.x

      - id: accquire_deployment
        run: |
          response=$(gh api \
            -H "Accept: application/vnd.github+json" \
            /repos/MarvelSQ/experiment/pages)
          echo "::set-output name=deploy_info::$response"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: init_environment
        run: |
          echo update dependencies $PR_UPDATE_DEPS
          git config user.name action
          git config user.email action@github.com
          subdir=${PR_TITLE////_}
          subdir="pr/${subdir// /_}"
          html_url=${{ fromJSON(steps.accquire_deployment.outputs.deploy_info).html_url }}
          echo "::set-output name=deploy_path::${subdir}"
          echo "::set-output name=url::${html_url}${subdir}"

      - name: install dependencies
        if: ${{ env.PR_TYPE != 'closed' }}
        run: pnpm i

      - name: build docs
        if: ${{ env.PR_TYPE != 'closed' }}
        run: |
          npm run docs:build
          cp -r docs/dist ../pages

      - name: deploy preview docs
        if: ${{ env.PR_TYPE != 'closed' }}
        run: |
          git clean -ffdx
          git checkout gh-pages
          git pull
          echo "Deploying PR: ${PR_TITLE} to ${DEPLOY_PATH}"
          mkdir -p ${DEPLOY_PATH}
          cp -r ../pages/* ${DEPLOY_PATH}
          ls
          git add .
          git commit -m "update docs from pr #$PR_TITLE"
          git push
        env:
          DEPLOY_PATH: ${{ steps.init_environment.outputs.deploy_path }}

      - name: clean preview docs
        if: ${{ env.PR_TYPE == 'closed' }}
        run: |
          git clean -ffdx
          git checkout gh-pages
          git pull
          rm -rf ${DEPLOY_PATH}
          git add .
          git commit -m "clean docs from pr #$PR_TITLE"
          git push
        env:
          DEPLOY_PATH: ${{ steps.init_environment.outputs.deploy_path }}
